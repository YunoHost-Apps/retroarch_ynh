#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
#REMOVEME? ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

#REMOVEME? domain=$YNH_APP_ARG_DOMAIN
#REMOVEME? path=$YNH_APP_ARG_PATH
#REMOVEME? is_public=$YNH_APP_ARG_IS_PUBLIC
#REMOVEME? app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
#REMOVEME? ynh_script_progression --message="Validating installation parameters..." --weight=1

#REMOVEME? install_dir=/opt/yunohost/$app
#REMOVEME? test ! -e "$install_dir" || ynh_die --message="This path already contains a folder"

# Register (book) web path
#REMOVEME? ynh_webpath_register --app=$app --domain=$domain --path=$path

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
#REMOVEME? ynh_script_progression --message="Storing installation settings..." --weight=1

#REMOVEME? ynh_app_setting_set --app=$app --key=domain --value=$domain
#REMOVEME? ynh_app_setting_set --app=$app --key=path --value=$path

#=================================================
# INSTALL DEPENDENCIES
#=================================================
#REMOVEME? ynh_script_progression --message="Installing dependencies..." --weight=13

ynh_install_nodejs --nodejs_version=$nodejs_version
ynh_use_nodejs
ynh_npm install -g coffeescript

#REMOVEME? ynh_install_app_dependencies $pkg_dependencies

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=60

#REMOVEME? ynh_app_setting_set --app=$app --key=install_dir --value=$install_dir
# Download, check integrity, uncompress and patch the source from app.src
# uncompress and patch done manually as 7z format is not supported
ynh_setup_source --dest_dir="$install_dir"
#7z archive not handled by ynh and no way to strip component, have to move it manually
7zr x $install_dir/retroarch.7z -o$install_dir
mv $install_dir/retroarch/* $install_dir/
#REMOVEME? ynh_secure_remove --file="$install_dir/retroarch.7z"
#REMOVEME? ynh_secure_remove --file="$install_dir/retroarch"

touch $install_dir/analytics.js #https://github.com/libretro/RetroArch/issues/4539#issuecomment-473345195

#Get the indexer as exe so that folder w/ ROMs can be indexed
chmod +x $install_dir/indexer

#=================================================
#SETTING MULTIMEDIA DIRECTORY
#=================================================
ynh_script_progression --message="Setting up Multimedia directory..." --weight=9

ynh_multimedia_build_main_dir
mkdir -p $install_dir/assets/cores/Game
ynh_multimedia_addfolder --source_dir="$install_dir/assets/cores/Game" --dest_dir="/share/Game"
ynh_add_config --template="../conf/README.GAME" --destination="$install_dir/assets/cores/Game/README"
chmod 666 $install_dir/assets/cores/Game/README

# SETUP CRON FILE FOR INDEXER

#setup indexer bash script
ynh_add_config --template="../conf/indexer.sh" --destination="$install_dir/indexer.sh"
chown www-data: $install_dir/indexer.sh
chmod 744 $install_dir/indexer.sh

#setup cron file
cron_path="/etc/cron.d/$app"
ynh_add_config --template="../conf/retroarch.cron" --destination="$cron_path"
chmod 644 "$cron_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=3

#backup & Update nginx MIME type so wasm mime type is recognized

if [ !$(grep wasm /etc/nginx/mime.types) ]; then
	ynh_print_info "/etc/nginx/mime.types saved as /etc/nginx/mime.types.$app"
	cp /etc/nginx/mime.types /etc/nginx/mime.types.$app
	ynh_replace_string --match_string="    application/octet-stream              bin exe dll;" --replace_string="    application/wasm                      wasm;\n\n    application/octet-stream              bin exe dll;" --target_file="/etc/nginx/mime.types"
	ynh_store_file_checksum --file="/etc/nginx/mime.types"
fi

# Create a dedicated nginx config
ynh_add_nginx_config

### For security reason, any app should set the permissions to www-data: before anything else.
### Then, if write authorization is needed, any access should be given only to directories
### that really need such authorization.

# Set permissions to app files
chown -R www-data: $install_dir
# Requested so that multimedia group can see the Game folder : all parent folder should be readable by others 
chmod 751 $install_dir

#=================================================
# SETUP SSOWAT
#=================================================
#REMOVEME? ynh_script_progression --message="Configuring permissions..." --weight=1

# Make app public if necessary
#REMOVEME? if [ $is_public -eq 1 ]
then
#REMOVEME? 	ynh_permission_update --permission "main" --add visitors
fi

#=================================================
# SETUP INDEX
#=================================================
#indexer use the current directory to run #https://github.com/libretro/RetroArch/tree/master/pkg/emscripten,
# so we have to cd in it to use it correctly => last step of the install so to not mess with other commands relative path
#Indexer will list the available ROM and cores for Retroarch
ynh_script_progression --message="Setup Indexer for content..." --weight=3

cd $install_dir/assets/frontend/bundle/
../../../indexer > .index-xhr
cd $install_dir/assets/cores
../../indexer > .index-xhr

#=================================================
# RELOAD NGINX
#=================================================
#REMOVEME? ynh_script_progression --message="Reloading NGINX web server..." --weight=1

#REMOVEME? ynh_systemd_action --service_name=nginx --action=reload


#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
