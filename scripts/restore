#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

#Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source /usr/share/yunohost/helpers
source ../settings/scripts/_common.sh


#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	#### Remove this function if there's nothing to clean before calling the remove script.
	true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading settings..." --time --weight=1

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get --app=$app --key=domain)
path_url=$(ynh_app_setting_get --app=$app --key=path)
final_path=$(ynh_app_setting_get --app=$app --key=final_path)
is_public=$(ynh_app_setting_get --app=$app --key=is_public)

#=================================================
# CHECK IF THE APP CAN BE RESTORED
#=================================================
ynh_script_progression --message="Validating restoration parameters..." --time --weight=1

ynh_webpath_available --domain=$domain --path_url=$path_url \
	|| ynh_die --message="Path not available: ${domain}${path_url}"
test ! -d $final_path \
	|| ynh_die --message="There is already a directory: $final_path "

#=================================================
# STANDARD RESTORATION STEPS
#=================================================
# RESTORE THE NGINX CONFIGURATION
#=================================================

ynh_restore_file --origin_path="/etc/nginx/conf.d/$domain.d/$app.conf"

#backup & Update nginx MIME type so wasm mime type is recognized

if [ !$(grep wasm /etc/nginx/mime.types) ]; then
	ynh_print_info "/etc/nginx/mime.types saved as /etc/nginx/mime.types.$app"
	cp /etc/nginx/mime.types /etc/nginx/mime.types.$app
	ynh_replace_string --match_string="    application/octet-stream              bin exe dll;" --replace_string="    application/wasm                      wasm;\n\n    application/octet-stream              bin exe dll;" --target_file="/etc/nginx/mime.types"
	ynh_store_file_checksum --file="/etc/nginx/mime.types"
fi
#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression --message="Restoring the app main directory..." --time --weight=1

ynh_restore_file --origin_path="$final_path"

#=================================================
# RESTORE USER RIGHTS
#=================================================

# Restore permissions on app files
chown -R root: $final_path

#=================================================
# SPECIFIC RESTORATION
#=================================================
# REINSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Reinstalling dependencies..." --time --weight=1

# Define and install dependencies
#Dependencies are not really required as this is just to unzip the 7z file
#ynh_install_app_dependencies $pkg_dependencies

#However, npm IS required to run the coffeescript
#ynh_install_nodejs --nodejs_version=14
#ynh_use_nodejs
#ynh_npm install -g coffeescript
ynh_use_nodejs
ynh_npm install -g coffeescript


#=================================================
#SETTING MULTIMEDIA DIRECTORY
#=================================================
ynh_script_progression --message="Setting up Multimedia directory..." --weight=9

ynh_multimedia_build_main_dir
ynh_multimedia_addfolder --source_dir="$final_path/assets/cores" --dest_dir="/Game"


#=================================================
# RESTORE THE CRON FILE
#=================================================

#ynh_restore_file --origin_path="/etc/cron.d/$app"

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# unprotected_uris allows SSO credentials to be passed anyway.
	#ynh_app_setting_set $app unprotected_uris "/"
	ynh_permission_update --permission "main" --add visitors
fi

#=================================================
# GENERIC FINALIZATION
#=================================================
# RELOAD NGINX AND PHP-FPM
#=================================================
ynh_script_progression --message="Reloading nginx web server..." --time --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Restoration completed for $app" --time --last
